# This pipeline runs after semaphore.yml
version: v1.0
name: Docker build server
agent:
  machine:
    # Use a machine type with more RAM and CPU power for faster container
    # builds:
    type: e1-standard-4
    os_image: ubuntu1804
blocks:
  - name: Build
    task:
      # Mount a secret which defines DOCKER_USERNAME and DOCKER_PASSWORD
      # environment variables.
      # For info on creating secrets, see:
      # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
      secrets:
        - name: gcr-secret
        - name: server-ormconfig-production
        - name: server-production-env
      prologue:
        commands:
          # Lets configure gcloud to push docker image into container registry
          # Authenticate using the file injected from the secret
          - gcloud auth activate-service-account --key-file=.secrets.gcp.json
          # Don't forget -q to silence confirmation prompts
          - gcloud auth configure-docker -q
          - gcloud config set project $GCP_PROJECT_ID
          - gcloud config set compute/zone $GCP_PROJECT_DEFAULT_ZONE
          - checkout
      jobs:
      - name: Docker build
        commands:
          - cd src/server

          # Copy production configs we linked using secrets
          - cp /home/semaphore/ormconfig.production.json ormconfig.json
          - cp /home/semaphore/server-production.env production.env

          # Use docker layer caching and reuse unchanged layers to build a new
          # container image faster.
          # To do that, we first need to pull a previous version of container:
          - docker pull "gcr.io/$GCP_PROJECT_ID/semaphore-demo-javascript-server:latest" || true

          # Build a new image based on pulled image, if present.
          # Use $SEMAPHORE_WORKFLOW_ID environment variable to produce a
          # unique image tag.
          # For a list of available environment variables on Semaphore, see:
          # https://docs.semaphoreci.com/article/12-environment-variables

          # Replace with your GCP Project ID
          - docker build --cache-from "gcr.io/$GCP_PROJECT_ID/semaphore-demo-javascript-server:latest" -t "gcr.io/$GCP_PROJECT_ID/semaphore-demo-javascript-server:$SEMAPHORE_WORKFLOW_ID" .
          - docker images

          # Push a new image to container registry:
          - docker push "gcr.io/$GCP_PROJECT_ID/semaphore-demo-javascript-server:$SEMAPHORE_WORKFLOW_ID"

# The deployment pipeline is defined to run on manual approval from the UI.
# Semaphore will the time and the name of the person who promotes each
# deployment.
#
# You could, for example, add another promotion to a pipeline that
# automatically deploys to a staging environment from branches named
# after a certain pattern.
# https://docs.semaphoreci.com/article/50-pipeline-yaml#promotions
promotions:
  - name: Deploy server to Kubernetes
    pipeline_file: server-deploy-k8s.yml
    auto_promote_on:
      - result: passed
